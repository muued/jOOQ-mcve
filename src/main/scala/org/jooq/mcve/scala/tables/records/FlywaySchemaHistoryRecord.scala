/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.scala.tables.records


import java.lang.Boolean
import java.lang.Integer
import java.lang.String
import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record10
import org.jooq.Row10
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.mcve.scala.tables.FlywaySchemaHistory


/**
 * This class is generated by jOOQ.
 */
class FlywaySchemaHistoryRecord extends UpdatableRecordImpl[FlywaySchemaHistoryRecord](FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY) with Record10[Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean] {

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.installed_rank</code>.
   */
  def setInstalledRank(value: Integer): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.installed_rank</code>.
   */
  def getInstalledRank: Integer = get(0).asInstanceOf[Integer]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.version</code>.
   */
  def setVersion(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.version</code>.
   */
  def getVersion: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.description</code>.
   */
  def setDescription(value: String): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.description</code>.
   */
  def getDescription: String = get(2).asInstanceOf[String]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.type</code>.
   */
  def setType(value: String): Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.type</code>.
   */
  def getType: String = get(3).asInstanceOf[String]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.script</code>.
   */
  def setScript(value: String): Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.script</code>.
   */
  def getScript: String = get(4).asInstanceOf[String]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.checksum</code>.
   */
  def setChecksum(value: Integer): Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.checksum</code>.
   */
  def getChecksum: Integer = get(5).asInstanceOf[Integer]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.installed_by</code>.
   */
  def setInstalledBy(value: String): Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.installed_by</code>.
   */
  def getInstalledBy: String = get(6).asInstanceOf[String]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.installed_on</code>.
   */
  def setInstalledOn(value: LocalDateTime): Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.installed_on</code>.
   */
  def getInstalledOn: LocalDateTime = get(7).asInstanceOf[LocalDateTime]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.execution_time</code>.
   */
  def setExecutionTime(value: Integer): Unit = {
    set(8, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.execution_time</code>.
   */
  def getExecutionTime: Integer = get(8).asInstanceOf[Integer]

  /**
   * Setter for <code>PUBLIC.flyway_schema_history.success</code>.
   */
  def setSuccess(value: Boolean): Unit = {
    set(9, value)
  }

  /**
   * Getter for <code>PUBLIC.flyway_schema_history.success</code>.
   */
  def getSuccess: Boolean = get(9).asInstanceOf[Boolean]

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  override def key: Record1[Integer] = super.key.asInstanceOf[ Record1[Integer] ]

  // -------------------------------------------------------------------------
  // Record10 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow: Row10[Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean] = super.fieldsRow.asInstanceOf[ Row10[Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean] ]

  override def valuesRow: Row10[Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean] = super.valuesRow.asInstanceOf[ Row10[Integer, String, String, String, String, Integer, String, LocalDateTime, Integer, Boolean] ]
  override def field1: Field[Integer] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK
  override def field2: Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.VERSION
  override def field3: Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.DESCRIPTION
  override def field4: Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.TYPE
  override def field5: Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SCRIPT
  override def field6: Field[Integer] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.CHECKSUM
  override def field7: Field[String] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_BY
  override def field8: Field[LocalDateTime] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_ON
  override def field9: Field[Integer] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.EXECUTION_TIME
  override def field10: Field[Boolean] = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SUCCESS
  override def component1: Integer = getInstalledRank
  override def component2: String = getVersion
  override def component3: String = getDescription
  override def component4: String = getType
  override def component5: String = getScript
  override def component6: Integer = getChecksum
  override def component7: String = getInstalledBy
  override def component8: LocalDateTime = getInstalledOn
  override def component9: Integer = getExecutionTime
  override def component10: Boolean = getSuccess
  override def value1: Integer = getInstalledRank
  override def value2: String = getVersion
  override def value3: String = getDescription
  override def value4: String = getType
  override def value5: String = getScript
  override def value6: Integer = getChecksum
  override def value7: String = getInstalledBy
  override def value8: LocalDateTime = getInstalledOn
  override def value9: Integer = getExecutionTime
  override def value10: Boolean = getSuccess

  override def value1(value: Integer): FlywaySchemaHistoryRecord = {
    setInstalledRank(value)
    this
  }

  override def value2(value: String): FlywaySchemaHistoryRecord = {
    setVersion(value)
    this
  }

  override def value3(value: String): FlywaySchemaHistoryRecord = {
    setDescription(value)
    this
  }

  override def value4(value: String): FlywaySchemaHistoryRecord = {
    setType(value)
    this
  }

  override def value5(value: String): FlywaySchemaHistoryRecord = {
    setScript(value)
    this
  }

  override def value6(value: Integer): FlywaySchemaHistoryRecord = {
    setChecksum(value)
    this
  }

  override def value7(value: String): FlywaySchemaHistoryRecord = {
    setInstalledBy(value)
    this
  }

  override def value8(value: LocalDateTime): FlywaySchemaHistoryRecord = {
    setInstalledOn(value)
    this
  }

  override def value9(value: Integer): FlywaySchemaHistoryRecord = {
    setExecutionTime(value)
    this
  }

  override def value10(value: Boolean): FlywaySchemaHistoryRecord = {
    setSuccess(value)
    this
  }

  override def values(value1 : Integer, value2 : String, value3 : String, value4 : String, value5 : String, value6 : Integer, value7 : String, value8 : LocalDateTime, value9 : Integer, value10 : Boolean): FlywaySchemaHistoryRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this.value9(value9)
    this.value10(value10)
    this
  }

  /**
   * Create a detached, initialised FlywaySchemaHistoryRecord
   */
  def this(installedRank : Integer, version : String, description : String, `type` : String, script : String, checksum : Integer, installedBy : String, installedOn : LocalDateTime, executionTime : Integer, success : Boolean) = {
    this()

    this.setInstalledRank(installedRank)
    this.setVersion(version)
    this.setDescription(description)
    this.setType(`type`)
    this.setScript(script)
    this.setChecksum(checksum)
    this.setInstalledBy(installedBy)
    this.setInstalledOn(installedOn)
    this.setExecutionTime(executionTime)
    this.setSuccess(success)
  }
}
